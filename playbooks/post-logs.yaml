- hosts: all
  tasks:

    - name: Set log path for a change
      when: zuul.change is defined
      set_fact:
        log_path: "{{ zuul.change[-2:] }}/{{ zuul.change }}/{{ zuul.patchset }}/{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Set log path for a ref update
      when: zuul.newrev is defined
      set_fact:
        log_path: "{{ zuul.newrev[-2:] }}/{{ zuul.newrev }}/{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Set log path for a periodic job
      when: zuul.change is not defined and zuul.newrev is not defined
      set_fact:
        log_path: "{{ zuul.pipeline }}/{{ zuul.job }}/{{ zuul.build[:7] }}"

    - name: Preparing file for logs
      tempfile:
        state: file
      register: tmpe
      no_log: true

    - block:
        - name: Preparing logs
          copy:
            content: |
              # Copy ansible logs
              mkdir -p /tmp/logs/job_logs
              ssh -i /home/citest/zuul_id_rsa -o StrictHostKeyChecking=no zuul@169.16.1.40 "sudo chown -R zuul.zuul {{ zuul.executor.log_root }}"
              ssh -i /home/citest/zuul_id_rsa -o StrictHostKeyChecking=no zuul@169.16.1.40 "sudo chmod -R 0777 /tmp; sudo chown -R zuul.zuul /tmp"
              scp -i /home/citest/zuul_id_rsa -o StrictHostKeyChecking=no -r zuul@169.16.1.40:{{ zuul.executor.log_root }} /tmp/job_logs/
              
              # Copy ironic logs
              mkdir -p /tmp/logs/ironic_logs
              sudo cp /var/log/kolla/ironic/* /tmp/logs/ironic_logs/
              
              # Copy kolla deploy logs
              mkdir -p /tmp/logs/ansible_logs
              sudo cp /var/log/kolla/ansible.log /tmp/logs/ansible_logs/

              # Copy misc logs
              cp /home/citest/ci_init.log /tmp/logs/job_logs/

              # Copy configurations
              mkdir -p /tmp/logs/etc
              sudo cp -R /etc/kolla/* /tmp/logs/etc/
              cp /home/citest/gate-test/tempest/etc/tempest.conf /tmp/logs/etc/

              # Create cleaning info
              <clean_info.json>   ==> it will have ==>
              {
                "job_id": "{{ log_path }}",
                "job_timestamp": str(time.time())
              }
              cp clean_info.json /tmp/logs/ansible_logs/

              # Copy logs to log-server
              tar -cvf /tmp/{{ zuul.change }}_{{ zuul.patchset }}_{{ zuul.job }}.tar /tmp/logs
              scp -i /home/citest/logserver_id_rsa -o StrictHostKeyChecking=no /tmp/{{ zuul.change }}_{{ zuul.patchset }}_{{ zuul.job }}.tar logserver@169.16.1.30:~/INCOMING_LOGS/

              # Push logs to GIT
              curl -X POST -d '{"paste_path": "{{ log_path }}", "tar_name": "{{ zuul.change }}_{{ zuul.patchset }}_{{ zuul.job }}.tar"}' -H 'Content-Type: application/json' http://169.16.1.30/logs/upload

            dest: "{{ tmpe.path }}"
            mode: 0777
          no_log: true
          become: true

        - name: Posting logs to logserver
          shell: bash {{ tmpe.path }}
      always:
        - name: Post logs to gerrit
          delegate_to: localhost
          zuul_return:
            data:
             zuul:
                log_url: "https://hpproliant.github.io/hpeproliant.github.io/logs/{{ log_path }}/{{ zuul.build[:7] }}.html"
